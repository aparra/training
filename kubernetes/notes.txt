K8S Training - Endocoe

=> DAY 1

kubernetes - https://kubernetes.io/docs/concepts/
openshift - https://www.openshift.com/

* Tip: small images are easy to start, eg: li-ruby (557MB) and drecom/ubuntu-ruby (1.26GB)

? monitoring containers
- ...
- Container patterns

* Http load balancer with ingress (https://cloud.google.com/container-engine/docs/tutorials/http-balancer)
? ingress
- ...
? servicing descovery
- ...
 
TO READ: Docker vs Odin vs Rocket 
https://www.networkworld.com/article/2952884/cloud-storage/container-wars-rocket-vs-odin-vs-docker.html

- minikube: Linux (kvm) and Mac (xhyve)
* however, it is possible install kvm driver at Mac

* Tip: monitoring net 
  brew install libvirt
  virsh list
  virsh net-list 

? k8s: node vs pod
- a POD always runs on a NODE. A Node is a worker machine in Kubernetes and may be either a virtual 
or a physical machine, depending on the cluster. Each Node is managed by the Master. A Node can have 
multiple Pods, and the Kubernetes master automatically handles scheduling the Pods across the Nodes 
in the cluster.
- pod namespace - logic separation for pods
- Pods are resilients
> kubectl get service --all-namespaces

> minikube service list
> minikube addons enable <SERVICE>

* exploring a service deployed at k8s
> kubectl get service -n <NAMESPACE> <NAME>
> kubectl get service -n kube-system kubernetes-dashboard
> kubectl get service -n kube-system kubernetes-dashboard -o yaml

* Continuos services
- Deployment > Replicaset > Service

> kubectl create -f file.yaml
> kubectl get deployments

* Debuging
> kubectl get pods
> kubectl get pods -w #watching flag
> kubectl exec -it <NAME> bash #ssh to Pod
> kubectl logs -f <NAME> #name of a specific Pod

> kubectl get deployments
> kubectl delete deployment <NAME> #nginx-deployment

* It is not possible update a pod (apt-get update) manualy.
  The following signatures were invalid: KEYEXPIRED XXXXXXX

good practice - https://12factor.net
datadog - https://www.datadoghq.com

* cron jobs
  k8s cron jobs - https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
  jobs - https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
  daemons sets - https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/


=> DAY 2

* Cluster administration - or better, maintenance
- kops (Kubernetes Operations) - https://github.com/kubernetes/kops
TO READ: https://aws.amazon.com/blogs/compute/kubernetes-clusters-aws-kops
TO CHECK: https://github.com/asobti/kube-monkey

* Namespaces
TO READ: https://kubernetes.io/docs/tasks/administer-cluster/namespaces-walkthrough/
> kubectl config view
> kubectl config use-context <NAME>

> kubectl get pods
> kubectl describe pod <NAME>
  - returns container info & historical events that happened into container

* ConfigMaps
TO READ: https://kubernetes.io/docs/tasks/configure-pod-container/configmap

? Secrets
TO READ: https://kubernetes.io/docs/concepts/configuration/secret

* Stateful
  - Storage - persistent storage
  - define names
  TO READ: https://kubernetes.io/docs/concepts/storage/persistent-volumes
  - It is acceptable to store data like logs into some cloud data bucket

* NodeSelector
- you can define some directions to kubernetes choose the host node to run the pode.
- eg: nodeSelector
        disktype: ssd

? What is Floker
- Flocker is an open-source container data volume orchestrator for your Dockerized applications.
TO READ: https://clusterhq.com/flocker/introduction
TO READ: https://clusterhq.com/2015/04/24/data-migration-kubernetes-flocker

? Crate DB - https://crate.io/
- Millions of inserts per second

- Design patterns for container-based distributed systems
TO READ: https://www.usenix.org/system/files/conference/hotcloud16/hotcloud16_burns.pdf

